{"version":3,"sources":["fbase.js","components/AuthFrom.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","storageBucket","messagingSenderId","appId","projectId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthFrom","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","console","log","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","className","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","NweetFactory","userObj","attachment","setAttachment","nweet","setNweet","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finshedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bad041e7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\n const firebaseConfig = {\n   apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n   appId: process.env.REACT_APP_APP_ID,\n   projectId: 'ntwitter-a5e8f',\n };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React,{useState} from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthFrom = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\"){\n            setEmail(value)\n        } else if(name === \"password\"){\n            setPassword(value);\n        }\n    }\n\n    //default  새로 고침 을 함\n    //그래서 그걸 막을려고 중지\n    // 새로고침을 내가 할거야\n    const onSubmit = async(event) => {\n        event.preventDefault();\n        try{\n            let data;\n            if(newAccount){\n                data = await authService.createUserWithEmailAndPassword(\n                    email, password\n                )\n            }else{\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        }catch(error) {\n            setError(error.message);\n        }\n        \n    }\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n                <input name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange}/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\" }/>\n                {error}\n            </form>\n            <span onClick={toggleAccount}>{newAccount ? \"Sign in\" : \"Create Account\"}</span>\n        </>\n    )\n\n};\n\nexport default AuthFrom;","import AuthFrom from \"components/AuthFrom\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\nfaTwitter,\nfaGoogle,\nfaGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {target:{name},} = event;\n        let provider;\n        console.log(name)\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else if (name === \"github\"){\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        \n    }\n    return(\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{marginBottom:30}}\n            />\n            <AuthFrom />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, {useState} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    //[itme, value] value 함수형 프로그램으로 가능d\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () =>{\n        const ok = window.confirm(\"Are you sure want to delete this?\");\n        \n        if(ok){\n            //delete must\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    }\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) =>{\n        event.preventDefault();\n        \n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text:newNweet,\n        });\n        setEditing(false);\n        \n    };\n    const onChange = (event) =>{\n        //event.target.value === 아래와 같음 \n        const {\n            target: {value},\n        } = event;\n        setNewNweet(value);\n        \n    };\n    //onSubmit : form전송을 하기 전에 입력된 데이터의 유효성을 체크하기 위해 사용하는 이벤트.\n    //input : <input> 태그의 value 속성은 <input> 요소의 초깃값(value)을 명시합니다.\n    return(\n        <div className=\"nweet\">\n            {\n                editing ? (\n                    <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required onChange={onChange}/>\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                    </>\n                    ) : (\n                    <>\n                        <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                        {isOwner && (\n                            <div className=\"nweet__actions\">\n                                <span onClick={onDeleteClick}>\n                                    <FontAwesomeIcon icon={faTrash} />\n                                </span>\n                                <span onClick={toggleEditing}>\n                                    <FontAwesomeIcon icon={faPencilAlt} />\n                                </span>\n                                \n                            </div>\n                        )}\n                    </>\n                )\n            }\n        </div>\n    )\n}\n\nexport default Nweet;","import React, {useState} from \"react\";\nimport {v4 as uuidv4} from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst NweetFactory = ({userObj}) => {\n    const [attachment, setAttachment] = useState(\"\");\n    const [nweet, setNweet] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\"){\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response= await attachmentRef.putString(attachment,  \"data_url\");\n            attachmentUrl =  await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text:nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        }\n        await dbService.collection(\"nweets\").add(nweetObj); \n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: {files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finshedEvent) =>{\n            const {\n                currentTarget: {result},\n            } = finshedEvent;\n            setAttachment(result);\n        };\n        //readAsDataURL 읽고 나서 Onloaded 로 이동\n        reader.readAsDataURL(theFile);\n    }\n    \n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className={onSubmit} className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value = {nweet}\n                    onChange = {onChange}\n                    type=\"text\"\n                    placeholder = \"What's on your mind?\"\n                    maxLength={120}\n                />\n\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n\n            <input \n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n\n\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img src={attachment} style={{backgroundImage: attachment,}} />\n                   \n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment} >\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                    \n                </div>\n            )}\n        </form>\n    )\n}\n\nexport default NweetFactory","import Nweet from \"components/Nweet\";\n\nimport { dbService } from \"fbase\";\nimport React,{useEffect, useState} from \"react\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    \n    const [nweets, setNweets] = useState([]);\n    \n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) =>{\n            const nweetArray = snapshot.docs.map(doc => ({\n                id:doc.id, \n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        })\n    },[]);\n    \n    //input :  image/* 모든 타입의 이미지 파일이 허용됨.\n    return (\n        <div className=\"container\"> \n            <NweetFactory userObj={userObj}/>\n            <div style={{marginTop: 30}}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                    key={nweet.id}\n                    nweetObj={nweet}\n                    isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Navigation = ({userObj}) => <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n            <Link to=\"/\" style={{marginRight:10}}>\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n            </Link>\n        </li>\n        <li>\n            <Link to=\"/profile\" style={{marginLeft:10, display: \"flex\", flexDirection:\"column\", alignItems:\"center\", fontSize:12,}}>\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                <span style={{ marginTop: 10 }}>\n                    {userObj.displayName\n                    ? `${userObj.displayName}의 Profile`\n                    : \"Profile\"}\n                </span>\n            </Link>\n        </li>\n    </ul>\n</nav>;\n\nexport default Navigation","import { authService, dbService } from \"fbase\";\nimport React, { useEffect ,useState} from \"react\";\nimport { useHistory } from \"react-router\";\n\nexport default ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyNweets = async() => {\n        const nweets  = await dbService.collection(\"nweets\").where(\"creatorId\",\"==\", userObj.uid).orderBy(\"createdAt\", \"desc\").get();\n        console.log(nweets.docs.map((doc) => doc.data()));\n        \n    }\n    useEffect(() =>  {\n        getMyNweets();\n    }, []);\n\n    const onChange = async (event) =>{\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    }\n    const onSubmit = async (event) =>{\n        event.preventDefault();\n        if(userObj.displayName !== newDisplayName){\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n        }\n        refreshUser();\n    }\n    return (\n        <>\n            <div className=\"container\">\n                <form onSubmit={onSubmit} className=\"profileForm\">\n                    <input onChange={onChange} type=\"text\" autoFocus placeholder=\"Display name\" value={newDisplayName} className=\"formInput\"/>\n                    <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{marginTop: 10,}}/>\n                </form>\n                <button className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>Log Out</button>\n            </div>\n        </>\n    )\n};","import React from \"react\";\nimport {HashRouter as Router,Route, Switch} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n    \n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                <>\n                <div \n                    style={{\n                        maxWidth:890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Route exact path=\"/\"> \n                        <Home userObj={userObj}/>\n                    </Route> \n                    <Route exact path=\"/profile\"> \n                        <Profile userObj={userObj} refreshUser={refreshUser}/>\n                    </Route> \n                </div>\n                </>\n                ) : (\n                    <>\n                    <Route  exact path=\"/\">\n                        <Auth />\n                    </Route>\n                    \n                    </>\n                )}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, {useState, useEffect} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user){\n        //setIsLoggedIn(true);\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }else{\n        //setIsLoggedIn(false);\n        setUserObj(null);\n      } \n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n      {init? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\n      \n    </>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}